(()=>{"use strict";var e,r={242:(e,r,i)=>{var t=i(995);t.ZP.use([t.W_,t.tl]),new t.ZP(".about__list",{slidesPerView:"auto",autoHeight:!0,navigation:{nextEl:".about__arrow--next",prevEl:".about__arrow--prev"},breakpoints:{576:{autoHeight:!1}}}),new t.ZP(".news__list",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".news__arrow--next",prevEl:".news__arrow--prev"},breakpoints:{992:{slidesPerView:3},768:{slidesPerView:2}}}),new t.ZP(".review__list",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".review__arrow--next",prevEl:".review__arrow--prev"},breakpoints:{992:{slidesPerView:3},1199:{slidesPerView:4},768:{slidesPerView:2}}}),new t.ZP(".technic__list",{slidesPerView:1,spaceBetween:30,navigation:{nextEl:".technic__arrow--next",prevEl:".technic__arrow--prev"},breakpoints:{992:{slidesPerView:3},768:{slidesPerView:2}}});var a=new t.ZP(".map-slider__body",{slidesPerView:1,spaceBetween:30,loop:!0,navigation:{nextEl:".map-slider__arrow-next",prevEl:".map-slider__arrow-prev"},pagination:{el:".map__dots",clickable:!0,renderBullet:function(e,r){var i=document.querySelectorAll(".map__dot")[e];return i.classList.add(r),i.outerHTML}}});window.mapSliderPagination=a.pagination.$el[0].childNodes}},i={};function t(e){var a=i[e];if(void 0!==a)return a.exports;var n=i[e]={exports:{}};return r[e](n,n.exports,t),n.exports}t.m=r,e=[],t.O=(r,i,a,n)=>{if(!i){var o=1/0;for(p=0;p<e.length;p++){for(var[i,a,n]=e[p],s=!0,l=0;l<i.length;l++)(!1&n||o>=n)&&Object.keys(t.O).every((e=>t.O[e](i[l])))?i.splice(l--,1):(s=!1,n<o&&(o=n));if(s){e.splice(p--,1);var w=a();void 0!==w&&(r=w)}}return r}n=n||0;for(var p=e.length;p>0&&e[p-1][2]>n;p--)e[p]=e[p-1];e[p]=[i,a,n]},t.d=(e,r)=>{for(var i in r)t.o(r,i)&&!t.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:r[i]})},t.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e={775:0};t.O.j=r=>0===e[r];var r=(r,i)=>{var a,n,[o,s,l]=i,w=0;if(o.some((r=>0!==e[r]))){for(a in s)t.o(s,a)&&(t.m[a]=s[a]);if(l)var p=l(t)}for(r&&r(i);w<o.length;w++)n=o[w],t.o(e,n)&&e[n]&&e[n][0](),e[o[w]]=0;return t.O(p)},i=self.webpackChunkwebpack=self.webpackChunkwebpack||[];i.forEach(r.bind(null,0)),i.push=r.bind(null,i.push.bind(i))})();var a=t.O(void 0,[187,452,206],(()=>t(242)));a=t.O(a)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,