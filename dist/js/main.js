(()=>{"use strict";var e,t={612:(e,t,n)=>{var i=n(755);function o(){var e=document.querySelector(".technology"),t=document.querySelectorAll(".technology-progress-bar span");e&&window.pageYOffset>e.offsetTop+.6*window.innerHeight&&t.forEach((function(e){var t=e.getAttribute("data-width");e.style.width=t+"%"}))}function c(e){e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px",e.closest(".acordeon-wrapper").classList.remove("active")):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px",e.closest(".acordeon-wrapper").classList.add("active"))}n(707)(i),window.addEventListener("scroll",(function(){o()})),document.addEventListener("DOMContentLoaded",(function(){var e,t,n,r;t=document.querySelector("body"),n=document.querySelector(".header-burger"),r=document.querySelector(".header__menu"),n&&n.addEventListener("click",(function(e){n.classList.contains("active")?(t.classList.remove("lock"),n.classList.remove("active"),r.classList.remove("active")):(t.classList.add("lock"),n.classList.add("active"),r.classList.add("active"))})),document.querySelectorAll(".header__item svg").forEach((function(e){e.addEventListener("click",(function(t){console.dir(e.nextElementSibling.scrollHeight),e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px"):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px")}))})),document.querySelectorAll(".acordeon-link").forEach((function(e){e.addEventListener("click",(function(t){var n=Number(e.closest(".acordeon-wrapper").getAttribute("data-acordeon-mobile"));n?window.innerWidth<n&&c(e):c(e)}))})),setTimeout((function(){var e=document.querySelectorAll(".service-item__title span");e.length&&e.forEach((function(e){var t=e.clientHeight;e.closest(".service-item").querySelector(".service-item__list").style.marginTop=t+40+"px"}))}),500),o(),e=document.querySelectorAll(".service-item"),window.innerWidth>991&&e.forEach((function(t){t.addEventListener("mouseenter",(function(n){e.forEach((function(e){e.classList.remove("active")})),t.classList.add("active")}))})),document.querySelectorAll(".map__wrapper svg a").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),i.fancybox.open('<div id="map-init"></div>',{width:"100%",height:"100%",autoSize:!1,scrolling:!1,padding:0}),i(document).on("afterShow.fb",(function(e,t,n){ymaps.ready((function(){new ymaps.Map("map-init",{center:[55.76,37.64],zoom:7,behaviors:["scrollZoom","drag"]})}))})),i(document).on("afterclose.fb",(function(e,t,n){myMap.destroy()}))}))}))}))}},n={};function i(e){var o=n[e];if(void 0!==o)return o.exports;var c=n[e]={exports:{}};return t[e].call(c.exports,c,c.exports,i),c.exports}i.m=t,e=[],i.O=(t,n,o,c)=>{if(!n){var r=1/0;for(d=0;d<e.length;d++){for(var[n,o,c]=e[d],a=!0,s=0;s<n.length;s++)(!1&c||r>=c)&&Object.keys(i.O).every((e=>i.O[e](n[s])))?n.splice(s--,1):(a=!1,c<r&&(r=c));if(a){e.splice(d--,1);var l=o();void 0!==l&&(t=l)}}return t}c=c||0;for(var d=e.length;d>0&&e[d-1][2]>c;d--)e[d]=e[d-1];e[d]=[n,o,c]},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0,216:0};i.O.j=t=>0===e[t];var t=(t,n)=>{var o,c,[r,a,s]=n,l=0;if(r.some((t=>0!==e[t]))){for(o in a)i.o(a,o)&&(i.m[o]=a[o]);if(s)var d=s(i)}for(t&&t(n);l<r.length;l++)c=r[l],i.o(e,c)&&e[c]&&e[c][0](),e[r[l]]=0;return i.O(d)},n=self.webpackChunkwebpack=self.webpackChunkwebpack||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=i.O(void 0,[216,741,157],(()=>i(612)));o=i.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,