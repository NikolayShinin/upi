(()=>{"use strict";var e,t={612:()=>{function e(){var e=document.querySelector(".technology"),t=document.querySelectorAll(".technology-progress-bar span");e&&window.pageYOffset>e.offsetTop+.6*window.innerHeight&&t.forEach((function(e){var t=e.getAttribute("data-width");e.style.width=t+"%"}))}function t(e){e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px",e.closest(".acordeon-wrapper").classList.remove("active")):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px",e.closest(".acordeon-wrapper").classList.add("active"))}window.addEventListener("scroll",(function(){e()})),document.addEventListener("DOMContentLoaded",(function(){var i,n,c,r;n=document.querySelector("body"),c=document.querySelector(".header-burger"),r=document.querySelector(".header__menu"),c&&c.addEventListener("click",(function(e){c.classList.contains("active")?(n.classList.remove("lock"),c.classList.remove("active"),r.classList.remove("active")):(n.classList.add("lock"),c.classList.add("active"),r.classList.add("active"))})),document.querySelectorAll(".header__item svg").forEach((function(e){e.addEventListener("click",(function(t){console.dir(e.nextElementSibling.scrollHeight),e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px"):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px")}))})),document.querySelectorAll(".acordeon-link").forEach((function(e){e.addEventListener("click",(function(i){var n=Number(e.closest(".acordeon-wrapper").getAttribute("data-acordeon-mobile"));n?window.innerWidth<n&&t(e):t(e)}))})),setTimeout((function(){var e=document.querySelectorAll(".service-item__title span");e.length&&e.forEach((function(e){var t=e.clientHeight;e.closest(".service-item").querySelector(".service-item__list").style.marginTop=t+40+"px"}))}),500),e(),i=document.querySelectorAll(".service-item"),window.innerWidth>991&&i.forEach((function(e){e.addEventListener("mouseenter",(function(t){i.forEach((function(e){e.classList.remove("active")})),e.classList.add("active")}))}))}))}},i={};function n(e){var c=i[e];if(void 0!==c)return c.exports;var r=i[e]={exports:{}};return t[e](r,r.exports,n),r.exports}n.m=t,e=[],n.O=(t,i,c,r)=>{if(!i){var o=1/0;for(d=0;d<e.length;d++){for(var[i,c,r]=e[d],s=!0,a=0;a<i.length;a++)(!1&r||o>=r)&&Object.keys(n.O).every((e=>n.O[e](i[a])))?i.splice(a--,1):(s=!1,r<o&&(o=r));if(s){e.splice(d--,1);var l=c();void 0!==l&&(t=l)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[i,c,r]},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0,216:0};n.O.j=t=>0===e[t];var t=(t,i)=>{var c,r,[o,s,a]=i,l=0;if(o.some((t=>0!==e[t]))){for(c in s)n.o(s,c)&&(n.m[c]=s[c]);if(a)var d=a(n)}for(t&&t(i);l<o.length;l++)r=o[l],n.o(e,r)&&e[r]&&e[r][0](),e[o[l]]=0;return n.O(d)},i=self.webpackChunkwebpack=self.webpackChunkwebpack||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var c=n.O(void 0,[216],(()=>n(612)));c=n.O(c)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,