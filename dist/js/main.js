(()=>{"use strict";var e,t={612:(e,t,n)=>{function i(){var e=document.querySelector(".technology"),t=document.querySelectorAll(".technology-progress-bar span");window.pageYOffset>e.offsetTop+.6*window.innerHeight&&t.forEach((function(e){var t=e.getAttribute("data-width");e.style.width=t+"%"}))}function r(e){e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px",e.closest(".acordeon-wrapper").classList.remove("active")):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px",e.closest(".acordeon-wrapper").classList.add("active"))}n(773),n(25),window.addEventListener("scroll",(function(){i()})),document.addEventListener("DOMContentLoaded",(function(){var e,t,n,o;e=document.querySelector("body"),t=document.querySelector(".header-burger"),n=document.querySelector(".header__menu"),t.addEventListener("click",(function(i){t.classList.contains("active")?(e.classList.remove("lock"),t.classList.remove("active"),n.classList.remove("active")):(e.classList.add("lock"),t.classList.add("active"),n.classList.add("active"))})),document.querySelectorAll(".header__item svg").forEach((function(e){e.addEventListener("click",(function(t){console.dir(e.nextElementSibling.scrollHeight),e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px"):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px")}))})),document.querySelectorAll(".acordeon-link").forEach((function(e){e.addEventListener("click",(function(t){var n=Number(e.closest(".acordeon-wrapper").getAttribute("data-acordeon-mobile"));n?window.innerWidth<n&&r(e):r(e)}))})),setTimeout((function(){var e=document.querySelectorAll(".service-item__title span");e.length&&e.forEach((function(e){var t=e.clientHeight;e.closest(".service-item").querySelector(".service-item__list").style.marginTop=t+40+"px"}))}),500),i(),o=document.querySelectorAll(".service-item"),window.innerWidth>991&&o.forEach((function(e){e.addEventListener("mouseenter",(function(t){o.forEach((function(e){e.classList.remove("active")})),e.classList.add("active")}))}))}))}},n={};function i(e){var r=n[e];if(void 0!==r)return r.exports;var o=n[e]={exports:{}};return t[e].call(o.exports,o,o.exports,i),o.exports}i.m=t,e=[],i.O=(t,n,r,o)=>{if(!n){var c=1/0;for(d=0;d<e.length;d++){for(var[n,r,o]=e[d],s=!0,a=0;a<n.length;a++)(!1&o||c>=o)&&Object.keys(i.O).every((e=>i.O[e](n[a])))?n.splice(a--,1):(s=!1,o<c&&(c=o));if(s){e.splice(d--,1);var l=r();void 0!==l&&(t=l)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[n,r,o]},i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.j=179,(()=>{var e={179:0,954:0};i.O.j=t=>0===e[t];var t=(t,n)=>{var r,o,[c,s,a]=n,l=0;if(c.some((t=>0!==e[t]))){for(r in s)i.o(s,r)&&(i.m[r]=s[r]);if(a)var d=a(i)}for(t&&t(n);l<c.length;l++)o=c[l],i.o(e,o)&&e[o]&&e[o][0](),e[c[l]]=0;return i.O(d)},n=self.webpackChunkwebpack=self.webpackChunkwebpack||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var r=i.O(void 0,[187,206,452,954,718],(()=>i(612)));r=i.O(r)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,