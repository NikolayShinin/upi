(()=>{"use strict";var e,t={612:(e,t,n)=>{var i=n(689);function o(){var e=document.querySelector(".technology"),t=document.querySelectorAll(".technology-progress-bar span");e&&window.pageYOffset>e.offsetTop+.6*window.innerHeight&&t.forEach((function(e){var t=e.getAttribute("data-width");e.style.width=t+"%"}))}function r(e){e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px",e.closest(".acordeon-wrapper").classList.remove("active")):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px",e.closest(".acordeon-wrapper").classList.add("active"))}window.Fancybox=i.KR,window.addEventListener("scroll",(function(){o()})),document.addEventListener("DOMContentLoaded",(function(){var e,t,n,c;t=document.querySelector("body"),n=document.querySelector(".header-burger"),c=document.querySelector(".header__menu"),n&&n.addEventListener("click",(function(e){n.classList.contains("active")?(t.classList.remove("lock"),n.classList.remove("active"),c.classList.remove("active")):(t.classList.add("lock"),n.classList.add("active"),c.classList.add("active"))})),document.querySelectorAll(".header__item svg").forEach((function(e){e.addEventListener("click",(function(t){console.dir(e.nextElementSibling.scrollHeight),e.classList.contains("active")?(e.classList.remove("active"),e.nextElementSibling.style.maxHeight="0px"):(e.classList.add("active"),e.nextElementSibling.style.maxHeight=e.nextElementSibling.scrollHeight+"px")}))})),document.querySelectorAll(".acordeon-link").forEach((function(e){e.addEventListener("click",(function(t){var n=Number(e.closest(".acordeon-wrapper").getAttribute("data-acordeon-mobile"));n?window.innerWidth<n&&r(e):r(e)}))})),setTimeout((function(){var e=document.querySelectorAll(".service-item__title span");e.length&&e.forEach((function(e){var t=e.clientHeight;e.closest(".service-item").querySelector(".service-item__list").style.marginTop=t+40+"px"}))}),500),o(),e=document.querySelectorAll(".service-item"),window.innerWidth>991&&e.forEach((function(t){t.addEventListener("mouseenter",(function(n){e.forEach((function(e){e.classList.remove("active")})),t.classList.add("active")}))})),document.querySelectorAll(".map__wrapper svg a").forEach((function(e){e.addEventListener("click",(function(e){e.preventDefault(),i.KR.show([{src:"<div id='map-init'></div>",type:"html"}],{mainClass:"map-fancybox",dragToClose:!1,touch:!0}).on("done",(function(e,t){ymaps.ready((function(){new ymaps.Map("map-init",{center:[55.76,37.64],zoom:7})}))}))}))}))}))}},n={};function i(e){var o=n[e];if(void 0!==o)return o.exports;var r=n[e]={exports:{}};return t[e](r,r.exports,i),r.exports}i.m=t,e=[],i.O=(t,n,o,r)=>{if(!n){var c=1/0;for(d=0;d<e.length;d++){for(var[n,o,r]=e[d],a=!0,s=0;s<n.length;s++)(!1&r||c>=r)&&Object.keys(i.O).every((e=>i.O[e](n[s])))?n.splice(s--,1):(a=!1,r<c&&(c=r));if(a){e.splice(d--,1);var l=o();void 0!==l&&(t=l)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[n,o,r]},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={179:0,216:0};i.O.j=t=>0===e[t];var t=(t,n)=>{var o,r,[c,a,s]=n,l=0;if(c.some((t=>0!==e[t]))){for(o in a)i.o(a,o)&&(i.m[o]=a[o]);if(s)var d=s(i)}for(t&&t(n);l<c.length;l++)r=c[l],i.o(e,r)&&e[r]&&e[r][0](),e[c[l]]=0;return i.O(d)},n=self.webpackChunkwebpack=self.webpackChunkwebpack||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))})();var o=i.O(void 0,[216,964],(()=>i(612)));o=i.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,